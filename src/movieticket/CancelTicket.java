/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package movieticket;

/**
 *
 * @author parep
 */
public class CancelTicket extends javax.swing.JFrame {

    /**
     * Creates new form CancelTicket
     */
    public CancelTicket() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("movie?zeroDateTimeBehavior=convertToNullPU").createEntityManager();
        tempQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT t FROM Temp t");
        tempList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : tempQuery.getResultList();
        tempQuery1 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT t FROM Temp t");
        tempList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : tempQuery1.getResultList();
        tempQuery2 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT t FROM Temp t");
        tempList2 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : tempQuery2.getResultList();
        tempQuery3 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT t FROM Temp t");
        tempList3 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : tempQuery3.getResultList();
        moviePUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("moviePU").createEntityManager();
        tempQuery4 = java.beans.Beans.isDesignTime() ? null : moviePUEntityManager.createQuery("SELECT t FROM Temp t");
        tempList4 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : tempQuery4.getResultList();
        tempQuery5 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT t FROM Temp t");
        tempList5 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : tempQuery5.getResultList();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 644, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(115, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CancelTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CancelTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CancelTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CancelTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CancelTicket().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.persistence.EntityManager moviePUEntityManager;
    private java.util.List<movieticket.Temp> tempList;
    private java.util.List<movieticket.Temp> tempList1;
    private java.util.List<movieticket.Temp> tempList2;
    private java.util.List<movieticket.Temp> tempList3;
    private java.util.List<movieticket.Temp> tempList4;
    private java.util.List<movieticket.Temp> tempList5;
    private javax.persistence.Query tempQuery;
    private javax.persistence.Query tempQuery1;
    private javax.persistence.Query tempQuery2;
    private javax.persistence.Query tempQuery3;
    private javax.persistence.Query tempQuery4;
    private javax.persistence.Query tempQuery5;
    // End of variables declaration//GEN-END:variables
}
